CppRPGEnv: C++-RPG Maker Environment
    - C++-code can be run outside of RPG Maker so that I can debug it normally without dependencies.
        - Plattform Code that runs my code (kinda like engine).

- Interface:
    - RPG Maker Commands:
        Debug & Menu:
            Show Text:
                - could redirect to cout.
            Show Choices:
            Input Number:
        CHARA RAM:
            Change Item
            Change Party Member
            Change EXP
            Change Parameters
            Change Equipment:
        Events:
            Set Event Location
            Get Event ID
            Erase Event
            Call Event
            End Event Processing
            Comment
        Rendering:
            Show Picture
            Show/Hide Player
        Input:
            Key Input Processing
    
    - Other RPG Maker Related Functions:
        Setting Name of Variables/Switches.

    - Interface to Emu:
        - Just have one Function in Emulator called "RPGMain" that is entry point from Env and CodeGen will generate a Common Event from that (which is the first one).
        - This function can be implemented from interface class?
    
    - Interface to Env:
        - One Interface class that has the commands to the environment where CodeGen will generate fitting EventCommands (ShowPicture, ShowChoices, etc)

- Tasks:
    - Tasks:
        - Load lcf files (Database, Maps, MapTree)
        - Setup some Environmentstate and sfml.
    
    - Each Update:
        - Update Inputs from sfml
        - Call "RPGMain" (Game Update)
        - Render Game.

    - Framerate Control:
        - 60fps.
        - Common Event can reduce framerate.
    
    - Rendering:
        - Idea:
            - Basically keep the entire state in Memory and when Rendering iterate over that.
            - State can be the current pictures in Program that are loaded.
            - Functions from Interface like "ShowPicture" will change the state of the Environment.
        - Resolution:
            4:3, 
        - Show Text:
            - Textbox: 30% of Bottom Screen, Blue.
            - 4 lines of text can fit.
        - Show Choices:
            - 4 possible Inputs to choose from. Same Textbox
            - just 4 lines of Text to select from.
        - Input Number:
            - x number of digits.
            - basically like a pad lock.
        - Show Picture:
            - Basically just a sprite!.
        - Show/Hide Player (Ignore!).

    
    - Key Input:
        - Basically just a few keyboard keys you can use.
        - I need to create a complete state of the keyboard. AFAIK sfml does not allow to just querry the keystate at any time.
    

- Can use SFML to create the basic graphic/window layer.
    https://www.sfml-dev.org